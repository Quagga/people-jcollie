<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<!--
	This file is part of Quagga.

	Quagga is free software; you can redistribute it and/or modify it
	under the terms of the GNU General Public License as published by the
	Free Software Foundation; either version 2, or (at your option) any
	later version.

	Quagga is distributed in the hope that it will be useful, but 
	WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
	General Public License for more details.

	You should have received a copy of the GNU General Public License  
	along with Quagga; see the file COPYING.  If not, write to the Free
	Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
	02111-1307, USA.

	Copyright 2005 Sun Microsystems, Inc.  All rights reserved.
	Use is subject to license terms.

	ident	"@(#)quagga.xml	1.0	05/03/15 SMI"
-->

<service_bundle type='manifest' name='QUAGGAdaemons:quagga'>
<service
	name='network/routing/zebra'
	type='service'
	version='1'>

	<instance name='quagga' enabled='false'>
	
	<dependency name='fs'
		grouping='require_all'
		restart_on='none'
		type='service'>
		<service_fmri
			value='svc:/system/filesystem/usr:default' />
	</dependency>
	
	<dependency name='net'
		grouping='require_all'
		restart_on='none'
		type='service'>
		<service_fmri value='svc:/network/initial' />
	</dependency>

	<dependency name='config_data'
		grouping='require_all'
		restart_on='restart'
		type='path'>
		<service_fmri
			value='file://localhost/@sysconfdir@/zebra.conf' />
	</dependency>
	
	<exec_method
		type='method'
		name='start'
		exec='/lib/svc/method/quagga zebra %{routing/daemon-args}'
		timeout_seconds='60'>
		<method_context>
		  <method_credential
		   user='root' group='root'
		   privileges='basic,net_icmpaccess,net_rawaccess,sys_admin,sys_net_config'/>
 		</method_context>
	</exec_method>

	<exec_method
		type='method'
		name='stop'
		exec=':kill'
		timeout_seconds='60'>
	</exec_method>

	<!--    if we define these properties at the service level, each
		instance inherits them, and it can override with
		desired values.
	-->
	<property_group name='startd'
		type='framework'>
		<!-- sub-process core dumps shouldn't restart session -->
		<propval name='ignore_error'
		    type='astring' value='core,signal' />
	</property_group>

	<property_group name='routing' type='application'>
		<propval name='value_authorization' type='astring' 
		         value='solaris.smf.modify.routing' />
		<propval name='daemon-args' type='astring' value='-P 0'/>
	</property_group>
	
	<property_group name='general' type='framework'>
		<!-- to start stop routing services -->
		<propval name='action_authorization' type='astring'
			 value='solaris.smf.manage.routing' />
	</property_group>

	<template>
		<common_name>
			<loctext xml:lang='C'>
			Quagga: zebra, RIB, kernel intermediary and misc daemon
			</loctext>
		</common_name>
		<documentation>
			<manpage title='zebra' section='1M'
				manpath='@mandir@' />
			<doc_link name='quagga.net' 
				uri='http://www.quagga.net/' />
		</documentation>
	</template>
	</instance>
	<stability value='Evolving' />
</service>

<service
	name='network/routing/rip'
	type='service'
	version='1'>

	<instance name='quagga' enabled='false'>

	<dependency name='fs'
		grouping='require_all'
		restart_on='none'
		type='service'>
		<service_fmri
			value='svc:/system/filesystem/usr:default' />
	</dependency>

	<!-- Depends on Work-In-Progress, not yet in SNV
	<dependency name='net'
		grouping='require_all'
		restart_on='none'
		type='service'>
		<service_fmri value='svc:/network/routing/ipv4-routing' />
	</dependency>
	-->
	
	<dependency name='zebra'
			grouping='require_all'
			restart_on='restart'
			type='service'>
			<service_fmri value='svc:/network/routing/zebra:quagga' />
	</dependency>

	<dependency name='config_data'
		grouping='require_all'
		restart_on='restart'
		type='path'>
		<service_fmri
			value='file://localhost/@sysconfdir@/ripd.conf' />
	</dependency>
	
	<exec_method
		type='method'
		name='start'
		exec='/lib/svc/method/quagga ripd %{routing/daemon-args}'
		timeout_seconds='60'>
		<method_context>
		  <method_credential
		   user='root' group='root'
		   privileges='basic,net_icmpaccess,net_privaddr,net_rawaccess'/>
 		</method_context>
	</exec_method>

	<exec_method
		type='method'
		name='stop'
		exec=':kill'
		timeout_seconds='60'>
	</exec_method>

	<property_group name='startd'
		type='framework'>
		<!-- sub-process core dumps shouldn't restart session -->
		<propval name='ignore_error'
		    type='astring' value='core,signal' />
	</property_group>

	<property_group name='routing' type='application'>
		<propval name='value_authorization' type='astring' 
		         value='solaris.smf.modify.routing' />
		<propval name='daemon-args' type='astring' value='-P 0'/>
	</property_group>

	<property_group name='general' type='framework'>
		<!-- to start stop routing services -->
		<propval name='action_authorization' type='astring'
			 value='solaris.smf.manage.routing' />
	</property_group>

	<template>
		<common_name>
			<loctext xml:lang='C'>
			Quagga: ripd, RIPv1/2 IPv4 routing protocol daemon.
			</loctext>
		</common_name>
		<documentation>
			<manpage title='ripd' section='1M'
				manpath='@mandir@' />
			<doc_link name='quagga.net' 
				uri='http://www.quagga.net/' />
		</documentation>
	</template>
	</instance>
	<stability value='Evolving' />
</service>

<service
	name='network/routing/ripng'
	type='service'
	version='1'>

	<instance name='quagga' enabled='false'>

	<dependency name='fs'
		grouping='require_all'
		restart_on='none'
		type='service'>
		<service_fmri
			value='svc:/system/filesystem/usr:default' />
	</dependency>
	
	<!-- Depends on WIP, not yet in SNV
	<dependency name='net'
		grouping='require_all'
		restart_on='none'
		type='service'>
		<service_fmri value='svc:/network/routing/ipv6-routing' />
	</dependency>
	-->

	<dependency name='zebra'
			grouping='require_all'
			restart_on='restart'
			type='service'>
			<service_fmri value='svc:/network/routing/zebra:quagga' />
	</dependency>

	<dependency name='config_data'
		grouping='require_all'
		restart_on='restart'
		type='path'>
		<service_fmri
			value='file://localhost/@sysconfdir@/ripngd.conf' />
	</dependency>
	
	<exec_method
		type='method'
		name='start'
		exec='/lib/svc/method/quagga ripngd %{routing/daemon-args}'
		timeout_seconds='60'>
		<method_context>
		  <method_credential
		   user='root' group='root'
		   privileges='basic,net_icmpaccess,net_privaddr,net_rawaccess'/>
 		</method_context>
	</exec_method>

	<exec_method
		type='method'
		name='stop'
		exec=':kill'
		timeout_seconds='60' >
	</exec_method>

	<property_group name='startd'
		type='framework'>
		<!-- sub-process core dumps shouldn't restart session -->
		<propval name='ignore_error'
		    type='astring' value='core,signal' />
	</property_group>

	<property_group name='routing' type='application'>
		<propval name='value_authorization' type='astring' 
		         value='solaris.smf.modify.routing' />
		<propval name='daemon-args' type='astring' value='-P 0'/>
	</property_group>

	<property_group name='general' type='framework'>
		<!-- to start stop routing services -->
		<propval name='action_authorization' type='astring'
			 value='solaris.smf.manage.routing' />
	</property_group>

	<template>
		<common_name>
			<loctext xml:lang='C'>
			Quagga: ripngd, RIPng IPv6 routing protocol daemon.
			</loctext>
		</common_name>
		<documentation>
			<manpage title='ripngd' section='1M'
				manpath='@mandir@' />
			<doc_link name='quagga.net' 
				uri='http://www.quagga.net/' />
		</documentation>
	</template>
	</instance>
	<stability value='Evolving' />
</service>

<service
	name='network/routing/ospf'
	type='service'
	version='1'>

	<instance name='quagga' enabled='false'>

	<dependency name='fs'
		grouping='require_all'
		restart_on='none'
		type='service'>
		<service_fmri
			value='svc:/system/filesystem/usr:default' />
	</dependency>
	
	<!-- Depends on WIP, not yet in SNV
	<dependency name='net'
		grouping='require_all'
		restart_on='none'
		type='service'>
		<service_fmri value='svc:/network/routing/ipv4-routing' />
	</dependency>
	-->

	<dependency name='zebra'
			grouping='require_all'
			restart_on='restart'
			type='service'>
			<service_fmri value='svc:/network/routing/zebra:quagga' />
	</dependency>

	<dependency name='config_data'
		grouping='require_all'
		restart_on='restart'
		type='path'>
		<service_fmri
			value='file://localhost/@sysconfdir@/ospfd.conf' />
	</dependency>
	
	<exec_method
		type='method'
		name='start'
		exec='/lib/svc/method/quagga ospfd %{routing/daemon-args}'
		timeout_seconds='60'>
		<method_context>
		  <method_credential
		   user='root' group='root'
		   privileges='basic,net_icmpaccess,net_privaddr,net_rawaccess,sys_net_config'/>
 		</method_context>
	</exec_method>

	<exec_method
		type='method'
		name='stop'
		exec=':kill'
		timeout_seconds='60'>
	</exec_method>

	<property_group name='startd'
		type='framework'>
		<!-- sub-process core dumps shouldn't restart session -->
		<propval name='ignore_error'
		    type='astring' value='core,signal' />
	</property_group>

	<property_group name='routing' type='application'>
		<propval name='value_authorization' type='astring' 
		         value='solaris.smf.modify.routing' />
		<propval name='daemon-args' type='astring' value='-P 0'/>
	</property_group>

	<property_group name='general' type='framework'>
		<!-- to start stop routing services -->
		<propval name='action_authorization' type='astring'
			 value='solaris.smf.manage.routing' />
	</property_group>

	<template>
		<common_name>
			<loctext xml:lang='C'>
			Quagga: ospfd, OSPFv2 IPv4 routing protocol daemon.
			</loctext>
		</common_name>
		<documentation>
			<manpage title='ospfd' section='1M'
				manpath='@mandir@' />
			<doc_link name='quagga.net' 
				uri='http://www.quagga.net/' />
		</documentation>
	</template>
	</instance>
	<stability value='Evolving' />
</service>

<service
	name='network/routing/ospf6'
	type='service'
	version='1'>

	<instance name='quagga' enabled='false'>

	<dependency name='fs'
		grouping='require_all'
		restart_on='none'
		type='service'>
		<service_fmri
			value='svc:/system/filesystem/usr:default' />
	</dependency>
	
	<!-- Depends on WIP, not yet in SNV
	<dependency name='net'
		grouping='require_all'
		restart_on='none'
		type='service'>
		<service_fmri value='svc:/network/routing/ipv6-routing' />
	</dependency>
	-->

	<dependency name='zebra'
			grouping='require_all'
			restart_on='restart'
			type='service'>
			<service_fmri value='svc:/network/routing/zebra:quagga' />
	</dependency>

	<dependency name='config_data'
		grouping='require_all'
		restart_on='restart'
		type='path'>
		<service_fmri
			value='file://localhost/@sysconfdir@/ospf6d.conf' />
	</dependency>
	
	<exec_method
		type='method'
		name='start'
		exec='/lib/svc/method/quagga ospf6d %{routing/daemon-args}'
		timeout_seconds='60'>
		<method_context>
		  <method_credential
		   user='root' group='root'
		   privileges='basic,net_icmpaccess,net_privaddr,net_rawaccess'/>
 		</method_context>
	</exec_method>

	<exec_method
		type='method'
		name='stop'
		exec=':kill'
		timeout_seconds='60'>
	</exec_method>

	<property_group name='startd'
		type='framework'>
		<!-- sub-process core dumps shouldn't restart session -->
		<propval name='ignore_error'
		    type='astring' value='core,signal' />
	</property_group>

	<property_group name='routing' type='application'>
		<propval name='value_authorization' type='astring' 
		         value='solaris.smf.modify.routing' />
		<propval name='daemon-args' type='astring' value='-P 0'/>
	</property_group>

	<property_group name='general' type='framework'>
		<!-- to start stop routing services -->
		<propval name='action_authorization' type='astring'
			 value='solaris.smf.manage.routing' />
	</property_group>

	<template>
		<common_name>
			<loctext xml:lang='C'>
			Quagga: ospf6d, OSPFv3 IPv6 routing protocol daemon.
			</loctext>
		</common_name>
		<documentation>
			<manpage title='ospf6d' section='1M'
				manpath='@mandir@' />
			<doc_link name='quagga.net' 
				uri='http://www.quagga.net/' />
		</documentation>
	</template>
	</instance>
	<stability value='Evolving' />
</service>


<service
	name='network/routing/bgp'
	type='service'
	version='1'>

	<instance name='quagga' enabled='false'>

	<dependency name='fs'
		grouping='require_all'
		restart_on='none'
		type='service'>
		<service_fmri
			value='svc:/system/filesystem/usr:default' />
	</dependency>
	
	<!-- Depends on WIP, not yet in SNV
	<dependency name='net'
		grouping='require_any'
		restart_on='none'
		type='service'>
		<service_fmri value='svc:/network/routing/ipv6-routing' />
		<service_fmri value='svc:/network/routing/ipv4-routing' />
	</dependency>
	-->
	
	<dependency name='zebra'
			grouping='optional_all'
			restart_on='restart'
			type='service'>
			<service_fmri value='svc:/network/routing/zebra:quagga' />
	</dependency>

	<dependency name='config_data'
		grouping='require_all'
		restart_on='restart'
		type='path'>
		<service_fmri
			value='file://localhost/@sysconfdir@/bgpd.conf' />
	</dependency>
	
	<exec_method
		type='method'
		name='start'
		exec='/lib/svc/method/quagga bgpd %{routing/daemon-args}'
		timeout_seconds='60'>
		<method_context>
		  <method_credential
		   user='root' group='root'
		   privileges='basic,net_icmpaccess,net_privaddr,net_rawaccess'/>
 		</method_context>
	</exec_method>

	<exec_method
		type='method'
		name='stop'
		exec=':kill'
		timeout_seconds='60' >
	</exec_method>

	<property_group name='startd'
		type='framework'>
		<!-- sub-process core dumps shouldn't restart session -->
		<propval name='ignore_error'
		    type='astring' value='core,signal' />
	</property_group>

	<property_group name='routing' type='application'>
		<propval name='value_authorization' type='astring' 
		         value='solaris.smf.modify.routing' />
		<propval name='daemon-args' type='astring' value='-P 0'/>
	</property_group>

	<property_group name='general' type='framework'>
		<!-- to start stop routing services -->
		<propval name='action_authorization' type='astring'
			 value='solaris.smf.manage.routing' />
	</property_group>

	<template>
		<common_name>
			<loctext xml:lang='C'>
			Quagga: bgpd, BGP routing protocol daemon.
			</loctext>
		</common_name>
		<documentation>
			<manpage title='bgpd' section='1M'
				manpath='@mandir@' />
			<doc_link name='quagga.net' 
				uri='http://www.quagga.net/' />
		</documentation>
	</template>
	</instance>
	<stability value='Evolving' />
</service>
</service_bundle>
